import os
from supabase import create_client
from dotenv import load_dotenv
import vecs 

load_dotenv()

url = os.getenv("SUPABASE_URL")
key = os.getenv("SUPABASE_KEY")
db_user = os.getenv("db_user")
db_password = os.getenv("db_password")
db_host = os.getenv("db_host")
db_port = os.getenv("db_port")
db_name = os.getenv("db_name")

supabase = create_client(url, key)

def upload_image_to_storage():
    for _, _, filenames in os.walk("C:\\Users\\astri\\summer24\\FaceMatch\\test_bilder"):
        for filename in filenames: 
            if filename.endswith(".png") or filename.endswith(".jpg"):
                image_path = str(os.path.join("test_bilder",filename))
                with open(image_path, "rb") as image_file:
                    image_name = os.path.basename(image_path)
                    supabase.storage.from_("images").upload(file=image_file, path=image_name, file_options={"content-type": "image/png+jpeg"})



"""create table if not exists Images (
    Id bigint generated by default as identity primary key,
    Picture text,
    Featurevector vector(4096)
);
"""

DB_CONNECTION = f"postgresql://{db_user}:{db_password}@{db_host}:{db_port}/{db_name}"
vx = vecs.create_client(DB_CONNECTION)
docs = vx.get_or_create_collection(name="docs", dimension=3)

docs.upsert(
    records=[
        ("vec0",
         [0.1, 0.2, 0.3], 
         {"year": 1073}
         ),
         ("vec1",
          [0.7, 0.8, 0.9],
          {"year": 2012})
    ]
)

docs.create_index()

docs.query(
    data=[0.4, 0.5, 0.6],
    limit=1,
    filters ={"year": {"$eq": 2012}},
)

vx.disconnect()